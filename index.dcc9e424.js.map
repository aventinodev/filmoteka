{"mappings":"AAMOA,eAAeC,EAAgBC,GACpC,IACE,MAAMC,QAAiBC,MACrB,iGAAwDF,KAI1D,aAFmBC,EAASE,M,CAG5B,MAAOC,GACP,MAAM,IAAIC,MAAMJ,SAASK,O,ECftB,MAAMC,EAAO,CAClBC,QAASC,SAASC,cAAc,YAChCC,WAAYF,SAASC,cAAc,iBAInCE,KAAMH,SAASC,cAAc,kBAC7BG,OAAQJ,SAASC,cAAc,WAC/BI,SAAUL,SAASC,cAAc,SACjCK,YAAaN,SAASC,cAAc,YACpCM,KAAMP,SAASC,cAAc,uBAC7BO,WAAYR,SAASC,cAAc,sBACnCQ,WAAYT,SAASC,cAAc,mBDoB9BZ,iBACL,IACE,MAAMG,QAAiBC,MACrB,yGAIF,aAFmBD,EAASE,QAEhBgB,M,CACZ,MAAOf,GACP,MAAM,IAAIC,MAAMJ,SAASK,O,GEvC7B,GAAYc,MAAKD,IACfE,aAAaC,QAAQ,aAAcC,KAAKC,UAAUL,GAAQ,IAG5D,MAAMM,EAAiBJ,aAAaK,QAAQ,cACtCC,EAAuBJ,KAAKK,MAAMH,GCFjC,SAASI,GAAaC,GAC3BA,EAAEC,MACFA,EAAKC,YACLA,EAAWC,aACXA,EAAYC,UACZA,IAEA,MAAMC,EAA4BD,EDSrBE,KAAIN,IACf,MAAMO,EAAUV,EAAqBW,MAAKC,GAASA,EAAMT,KAAOA,IAChE,OAAQA,EAAKO,EAAQG,IAAI,ICT3B,MAAO,gCAAgCV,0MAKDE,4BACjBD,mRAQiCA,oHAGzCI,EAAWM,OAAS,EAChBN,EAAWO,MAAM,EAAG,GAAGC,KAAK,MAC5BR,EAAWQ,KAAK,0EAEKV,EAAaW,MAAM,KAAK,4F,CAOzD,SAASC,EAAcC,GAC5B,MAAMC,EAASD,EAAUV,IAAIP,GAAcc,KAAK,IAChD,OAAQpC,EAAKC,QAAQwC,UAAYD,C,CC1B5B,SAASE,IACd1C,EAAKO,SAASoC,UAAUC,IAAI,U,CAQvB,SAASC,IACdH,IACA1C,EAAKQ,YAAYmC,UAAUG,OAAO,U,CCnBpC9C,EAAKQ,YAAYuC,iBAAiB,SDR3B,SAAsBC,IAI7B,WACMhD,EAAKO,SAASoC,UAAUM,SAAS,aACnCjD,EAAKO,SAASoC,UAAUO,OAAO,WAC/BlD,EAAKM,OAAOqC,UAAUG,OAAO,gBAC7B9C,EAAKQ,YAAYmC,UAAUC,IAAI,WAC/B5C,EAAKM,OAAOqC,UAAUC,IAAI,mBAY5B5C,EAAKS,KAAKkC,UAAUC,IAAI,mBACxB5C,EAAKU,WAAWiC,UAAUG,OAAO,oBAVjC,GAAID,G,CAXJM,E,ICQFnD,EAAKO,SAASwC,iBAAiB,QAASF,GAExCH,KAIAnD,iBACE,IACE,MAAM6D,QAAa5D,EAJZ,GAMP8C,EADkBc,EAAKC,Q,CAEvB,MAAOxD,GACPyD,QAAQC,IAAI1D,E,EAGhB2D","sources":["src/js/api.js","src/js/refs.js","src/js/gettingNamesOfGenres.js","src/js/template.js","src/js/header.js","src/index.js"],"sourcesContent":["const API_KEY = '31449444226ba6345698313fe055564a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_FILMS = 'trending/movie/day';\nconst KEY_WORD = 'search/movie';\nconst GENRES = 'genre/movie/list';\n\nexport async function getPopularFilms(page) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${TRENDING_FILMS}?api_key=${API_KEY}&page=${page}`\n    );\n    const data = await response.json();\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\nexport async function getFilmByKeyWord(page, query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${KEY_WORD}?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n    );\n    const data = await response.json();\n    // console.log(data);\n    // const result = await data.result;\n    return data;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\n\nexport async function getGenres() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${GENRES}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.json();\n\n    return data.genres;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\n","export const refs = {\n  gallery: document.querySelector('.gallery'),\n  genresList: document.querySelector('.genres__list'),\n  // switchBtn: document.querySelector('.switch-btn'),\n  // switchBtnToggle: document.querySelector('.switch-btn::after'),\n  // body: document.querySelector('body'),\n  card: document.querySelector('.gallery__card'),\n  header: document.querySelector('.header'),\n  pageHome: document.querySelector('#home'),\n  pageLibrary: document.querySelector('#library'),\n  form: document.querySelector('.header__wrap--form'),\n  btnLibrary: document.querySelector('.header__wrap--btn'),\n  headerWrap: document.querySelector('.header__wrap'),\n};\n","import { getGenres } from './api';\n\ngetGenres().then(genres => {\n  localStorage.setItem('genresData', JSON.stringify(genres));\n});\n\nconst saveGenresData = localStorage.getItem('genresData');\nconst parsedsaveGenresData = JSON.parse(saveGenresData);\n\n// export function getGenresNames(array) {\n//   console.log(parsedsaveGenresData);\n//   for (i = 0; i <= array.length; i += 1) {\n//     parsedsaveGenresData.forEach(genre => {\n//       if (array[i] === genre.id) {\n//         array[i] = genre.name;\n//       }\n//     });\n//   }\n// }\n\nexport function getGenresNames(array) {\n  return array.map(id => {\n    const foundId = parsedsaveGenresData.find(genre => genre.id === id);\n    return (id = foundId.name);\n  });\n}\n\n// async function getGenresName() {\n//   const data = await getPopularFilms(page);\n//   const genres = await getGenres();\n//   const genresArray = await data.results.map(result => result.genre_ids);\n//   const genreNames = genresArray.map(el => {\n//     return el.map(id => {\n//       const foundId = genres.find(genre => genre.id === id);\n//       return (id = foundId.name);\n//     });\n//   });\n//   console.log(genres);\n//   console.log(genreNames);\n//   return genreNames;\n// }\n// getGenresName();\n\n// export async function getGenresNames(array) {\n//   const genres = await getGenres();\n//   console.log(genres);\n//   for (i = 0; i <= array.length; i += 1) {\n//     genres.forEach(genre => {\n//       if (array[i] === genre.id) {\n//         array[i] = genre.name;\n//       }\n//     });\n//   }\n// }\n","import { refs } from './refs';\nimport { getGenresNames } from './gettingNamesOfGenres';\n\nconst BASE_PATH = 'https://image.tmdb.org/t/p/';\n\nexport function templateCard({\n  id,\n  title,\n  poster_path,\n  release_date,\n  genre_ids,\n}) {\n  const genreNames = getGenresNames(genre_ids);\n\n  return `<li class=\"gallery__card id=\"${id}\">\n  <a class=\"gallery__link\" href=\"#\">\n            <div class=\"gallery__img-wrap\">\n              <img\n                class=\"gallery__img\"\n                src=\"${BASE_PATH}w300/${poster_path}\"\n                alt=\"${title}\"\n                loading=\"lazy\"\n                width=\"395\"\n                height=\"569\"\n                              />\n            </div>\n           \n          <div class=\"gallery__info-wrap\">            \n            <h2 class=\"gallery__subtitle text-hidden\">${title}</h2>            \n            <div class=\"gallery__info\">\n             <p class=\"gallery__genres text-hidden\">${\n               genreNames.length > 3\n                 ? genreNames.slice(0, 2).join(', ')\n                 : genreNames.join(', ')\n             }</p>                      \n             <p class=\"gallery__year\">${release_date.split('-')[0]}</p>\n            </div>           \n          </div>\n           </a> \n          </li>`;\n}\n\nexport function templateCards(dataFilms) {\n  const markup = dataFilms.map(templateCard).join('');\n  return (refs.gallery.innerHTML = markup);\n}\n","import { refs } from './refs';\n\nexport function onTogglePage(e) {\n  onLibraryPageActive();\n}\n\nfunction onLibraryPageActive() {\n  if (refs.pageHome.classList.contains('current')) {\n    refs.pageHome.classList.toggle('current');\n    refs.header.classList.remove('header--home');\n    refs.pageLibrary.classList.add('current');\n    refs.header.classList.add('header--library');\n    onCreateLibraryPage();\n  }\n  if (onHomePageActive) {\n    return;\n  }\n}\nexport function startAddCurentClass() {\n  refs.pageHome.classList.add('current');\n}\n\nfunction onCreateLibraryPage() {\n  refs.form.classList.add('visually-hidden');\n  refs.btnLibrary.classList.remove('visually-hidden');\n}\n\nexport function onHomePageActive() {\n  startAddCurentClass();\n  refs.pageLibrary.classList.remove('current');\n}\n","import { getPopularFilms, getFilmByKeyWord, getGenres } from './js/api';\nimport { templateCards } from './js/template';\nimport { refs } from './js/refs';\n// import { onSwitchButton } from './js/switch-btn';\nimport {\n  onTogglePage,\n  startAddCurentClass,\n  onHomePageActive,\n} from './js/header';\n\nrefs.pageLibrary.addEventListener('click', onTogglePage);\nrefs.pageHome.addEventListener('click', onHomePageActive);\n\nstartAddCurentClass();\n\nlet page = 1;\n// onSwitchButton();\nasync function createGallery() {\n  try {\n    const data = await getPopularFilms(page);\n    const dataFilms = data.results;\n    templateCards(dataFilms);\n  } catch (error) {\n    console.log(error);\n  }\n}\ncreateGallery();\n\n// async function getGenresName() {\n//   const data = await getPopularFilms(page);\n//   const genres = await getGenres();\n//   const genresArray = await data.results.map(result => result.genre_ids);\n//   const genreNames = genresArray.map(el => {\n//     return el.map(id => {\n//       const foundId = genres.find(genre => genre.id === id);\n//       return (id = foundId.name);\n//     });\n//   });\n//   console.log(genres);\n//   console.log(genreNames);\n//   return genreNames;\n// }\n// getGenresName();\n"],"names":["async","$56ca17bb174b0ce3$export$b03db654262298f9","page","response","fetch","json","error","Error","status","$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","genresList","card","header","pageHome","pageLibrary","form","btnLibrary","headerWrap","genres","then","localStorage","setItem","JSON","stringify","$b5d49992d9ed67ae$var$saveGenresData","getItem","$b5d49992d9ed67ae$var$parsedsaveGenresData","parse","$ab61c061fc8186a0$export$a2874e29a4e3c7ed","id","title","poster_path","release_date","genre_ids","genreNames","map","foundId","find","genre","name","length","slice","join","split","$ab61c061fc8186a0$export$15de63bf7fc5e485","dataFilms","markup","innerHTML","$8aad853c076397e7$export$40af5e9ed5cc7042","classList","add","$8aad853c076397e7$export$65d137d07d89c746","remove","addEventListener","e","contains","toggle","$8aad853c076397e7$var$onLibraryPageActive","data","results","console","log","$1f0dc3b9307be026$var$createGallery"],"version":3,"file":"index.dcc9e424.js.map"}