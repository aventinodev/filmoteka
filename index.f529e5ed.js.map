{"mappings":"AAMOA,eAAeC,EAAgBC,GACpC,IACE,MAAMC,QAAiBC,MACrB,iGAAwDF,KAI1D,aAFmBC,EAASE,M,CAG5B,MAAOC,GACP,MAAM,IAAIC,MAAMJ,SAASK,O,ECftB,MAAMC,EAAO,CAClBC,QAASC,SAASC,cAAc,YAChCC,WAAYF,SAASC,cAAc,iBACnCE,UAAWH,SAASC,cAAc,eAClCG,gBAAiBJ,SAASC,cAAc,sBACxCI,KAAML,SAASC,cAAc,QAC7BK,KAAMN,SAASC,cAAc,oBD0BxBZ,iBACL,IACE,MAAMG,QAAiBC,MACrB,yGAIF,aAFmBD,EAASE,QAEhBa,M,CACZ,MAAOZ,GACP,MAAM,IAAIC,MAAMJ,SAASK,O,GEvC7B,GAAYW,MAAKD,IACfE,aAAaC,QAAQ,aAAcC,KAAKC,UAAUL,GAAQ,IAG5D,MAAMM,EAAiBJ,aAAaK,QAAQ,cACtCC,EAAuBJ,KAAKK,MAAMH,GCFjC,SAASI,GAAaC,GAC3BA,EAAEC,MACFA,EAAKC,YACLA,EAAWC,aACXA,EAAYC,UACZA,IAEA,MAAMC,EAA4BD,EDSrBE,KAAIN,IACf,MAAMO,EAAUV,EAAqBW,MAAKC,GAASA,EAAMT,KAAOA,IAChE,OAAQA,EAAKO,EAAQG,IAAI,ICT3B,MAAO,gCAAgCV,mKAIDE,4BACjBD,6OAOkBA,sIAIvBI,EAAWM,OAAS,EAChBN,EAAWO,MAAM,EAAG,GAAGC,OAAO,EAAG,EAAG,UAAUC,KAAK,MACnDT,EAAWS,KAAK,6FAIGX,EAAaY,MAAM,KAAK,iE,CAM1D,SAASC,EAAcC,GAC5B,MAAMC,EAASD,EAAUX,IAAIP,GAAce,KAAK,IAChD,OAAQlC,EAAKC,QAAQsC,UAAYD,C,CCxC5B,SAASE,IACdxC,EAAKK,UAAUoC,UAAUC,OAAO,aAE5B1C,EAAKK,UAAUoC,UAAUE,SAAS,aACpC3C,EAAKO,KAAKqC,MAAMC,gBAAkB,qBAElC7C,EAAKO,KAAKqC,MAAMC,gBAAkB,S,CARtC7C,EAAKK,UAAUyC,iBAAiB,QAASN,GCIzCA,IACAjD,iBACE,IACE,MAAMwD,QAAavD,EAJZ,GAMP4C,EADkBW,EAAKC,Q,CAEvB,MAAOnD,GACPoD,QAAQC,IAAIrD,E,EAGhBsD","sources":["src/js/api.js","src/js/refs.js","src/js/gettingNamesOfGenres.js","src/js/template.js","src/js/switch-btn.js","src/index.js"],"sourcesContent":["const API_KEY = '31449444226ba6345698313fe055564a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_FILMS = 'trending/movie/day';\nconst KEY_WORD = 'search/movie';\nconst GENRES = 'genre/movie/list';\n\nexport async function getPopularFilms(page) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${TRENDING_FILMS}?api_key=${API_KEY}&page=${page}`\n    );\n    const data = await response.json();\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\nexport async function getFilmByKeyWord(page, query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${KEY_WORD}?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n    );\n    const data = await response.json();\n    // console.log(data);\n    // const result = await data.result;\n    return data;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\n\nexport async function getGenres() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${GENRES}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.json();\n\n    return data.genres;\n  } catch (error) {\n    throw new Error(response.status);\n  }\n}\n","export const refs = {\n  gallery: document.querySelector('.gallery'),\n  genresList: document.querySelector('.genres__list'),\n  switchBtn: document.querySelector('.switch-btn'),\n  switchBtnToggle: document.querySelector('.switch-btn::after'),\n  body: document.querySelector('body'),\n  card: document.querySelector('.gallery__card'),\n};\n","import { getGenres } from './api';\n\ngetGenres().then(genres => {\n  localStorage.setItem('genresData', JSON.stringify(genres));\n});\n\nconst saveGenresData = localStorage.getItem('genresData');\nconst parsedsaveGenresData = JSON.parse(saveGenresData);\n\n// export function getGenresNames(array) {\n//   console.log(parsedsaveGenresData);\n//   for (i = 0; i <= array.length; i += 1) {\n//     parsedsaveGenresData.forEach(genre => {\n//       if (array[i] === genre.id) {\n//         array[i] = genre.name;\n//       }\n//     });\n//   }\n// }\n\nexport function getGenresNames(array) {\n  return array.map(id => {\n    const foundId = parsedsaveGenresData.find(genre => genre.id === id);\n    return (id = foundId.name);\n  });\n}\n\n// async function getGenresName() {\n//   const data = await getPopularFilms(page);\n//   const genres = await getGenres();\n//   const genresArray = await data.results.map(result => result.genre_ids);\n//   const genreNames = genresArray.map(el => {\n//     return el.map(id => {\n//       const foundId = genres.find(genre => genre.id === id);\n//       return (id = foundId.name);\n//     });\n//   });\n//   console.log(genres);\n//   console.log(genreNames);\n//   return genreNames;\n// }\n// getGenresName();\n\n// export async function getGenresNames(array) {\n//   const genres = await getGenres();\n//   console.log(genres);\n//   for (i = 0; i <= array.length; i += 1) {\n//     genres.forEach(genre => {\n//       if (array[i] === genre.id) {\n//         array[i] = genre.name;\n//       }\n//     });\n//   }\n// }\n","import { refs } from './refs';\nimport { getGenresNames } from './gettingNamesOfGenres';\n\nconst BASE_PATH = 'https://image.tmdb.org/t/p/';\n\nexport function templateCard({\n  id,\n  title,\n  poster_path,\n  release_date,\n  genre_ids,\n}) {\n  const genreNames = getGenresNames(genre_ids);\n\n  return `<li class=\"gallery__card id=\"${id}\">\n            <div class=\"gallery_img-wrap\">\n              <img\n                class=\"gallery__img\"\n                src=\"${BASE_PATH}w300/${poster_path}\"\n                alt=\"${title}\"\n                loading=\"lazy\"\n                width=\"395\"\n                height=\"569\"\n                              />\n            </div>\n            <div class=\"gallery__info-wrap\">\n            <h2 class=\"gallery__title\">${title}</h2>\n            <div class=\"gallery__info\">\n              <ul class=\"genres__list\">\n                <li class=\"genres__item\">${\n                  genreNames.length > 3\n                    ? genreNames.slice(0, 3).splice(2, 1, 'others').join(', ')\n                    : genreNames.join(', ')\n                }</li>\n                \n              </ul>\n              <p class=\"gallery__year\">${release_date.split('-')[0]}</p>\n            </div>\n            </div>\n          </li>`;\n}\n\nexport function templateCards(dataFilms) {\n  const markup = dataFilms.map(templateCard).join('');\n  return (refs.gallery.innerHTML = markup);\n}\n","import { refs } from './refs';\n\nrefs.switchBtn.addEventListener('click', onSwitchButton);\n\nexport function onSwitchButton() {\n  refs.switchBtn.classList.toggle('switch-on');\n\n  if (refs.switchBtn.classList.contains('switch-on')) {\n    refs.body.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n  } else {\n    refs.body.style.backgroundColor = '#ffffff';\n  }\n}\n// $(function(){\n//   $('.switch-btn').click(function (e, changeState) {\n//     if (changeState === undefined) {\n//       $(this).toggleClass('switch-on');\n//     }\n//     if ($(this).hasClass('switch-on')) {\n//       $(this).trigger('on.switch');\n//     } else {\n//       $(this).trigger('off.switch');\n//     }\n//   });\n\n//   $('.switch-btn').on('on.switch', function(){\n//     console.log('Кнопка переключена в состояние on');\n//   });\n\n//   $('.switch-btn').on('off.switch', function(){\n//     console.log('Кнопка переключена в состояние off');\n//   });\n\n//   $('.switch-btn').each(function(){\n//     $(this).triggerHandler('click', false);\n//   });\n\n// });\n","import { getPopularFilms, getFilmByKeyWord, getGenres } from './js/api';\nimport { templateCards } from './js/template';\nimport { refs } from './js/refs';\nimport { onSwitchButton } from './js/switch-btn';\n\nlet page = 1;\nonSwitchButton();\nasync function createGallery() {\n  try {\n    const data = await getPopularFilms(page);\n    const dataFilms = data.results;\n    templateCards(dataFilms);\n  } catch (error) {\n    console.log(error);\n  }\n}\ncreateGallery();\n\n// async function getGenresName() {\n//   const data = await getPopularFilms(page);\n//   const genres = await getGenres();\n//   const genresArray = await data.results.map(result => result.genre_ids);\n//   const genreNames = genresArray.map(el => {\n//     return el.map(id => {\n//       const foundId = genres.find(genre => genre.id === id);\n//       return (id = foundId.name);\n//     });\n//   });\n//   console.log(genres);\n//   console.log(genreNames);\n//   return genreNames;\n// }\n// getGenresName();\n"],"names":["async","$56ca17bb174b0ce3$export$b03db654262298f9","page","response","fetch","json","error","Error","status","$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","genresList","switchBtn","switchBtnToggle","body","card","genres","then","localStorage","setItem","JSON","stringify","$b5d49992d9ed67ae$var$saveGenresData","getItem","$b5d49992d9ed67ae$var$parsedsaveGenresData","parse","$ab61c061fc8186a0$export$a2874e29a4e3c7ed","id","title","poster_path","release_date","genre_ids","genreNames","map","foundId","find","genre","name","length","slice","splice","join","split","$ab61c061fc8186a0$export$15de63bf7fc5e485","dataFilms","markup","innerHTML","$22ab534afb8687b9$export$c1cf4e4a1e7af04c","classList","toggle","contains","style","backgroundColor","addEventListener","data","results","console","log","$1f0dc3b9307be026$var$createGallery"],"version":3,"file":"index.f529e5ed.js.map"}